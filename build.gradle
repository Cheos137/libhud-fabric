plugins {
	id 'fabric-loom' version '1.+'
	id 'maven-publish'
}

version = '1.20-1.0.0-beta7'
group = 'dev.cheos'
base.archivesName = 'libhud-fabric'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
	test {
		// java { srcDirs += sourceSets.main.allJava }
		// resources { srcDirs += sourceSets.main.resources }
	}
}

repositories {
	maven { url = 'https://maven.parchmentmc.org/' }
}

dependencies {
	minecraft 'com.mojang:minecraft:1.20.2'

	mappings loom.layered() {
		officialMojangMappings()
		parchment('org.parchmentmc.data:parchment-1.20.1:2023.06.26@zip')
	}

	modImplementation 'net.fabricmc:fabric-loader:0.14.24'

	modCompileOnly 'net.fabricmc.fabric-api:fabric-api:0.90.4+1.20.2'
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

java {
	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

loom {
	accessWidenerPath = file('src/main/resources/libhud.accesswidener')

	runs {
		client {
			environment = 'client'
			configName = 'runLibhudClient'
			runDir = 'run/client'
			source = sourceSets.main
			ideConfigGenerated = true
			
			client()
		}
		
		debugClient {
			inherit client
			configName = 'runLibhudClientDebug'
			property('libhud.debug', 'true')
		}

		test {
			inherit client
			
			configName = 'runLibhudClientTEST'
			source = sourceSets.test
		}
	}

	mixin {
		defaultRefmapName = 'libhud.refmap.json'
	}

	decompilers {
		fernflower {
			memory = 16384L
			maxThreads = 12
		}
	}

	interfaceInjection {
		enableDependencyInterfaceInjection = true
	}
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// publishing {
// 	publications {
// 		mavenJava(MavenPublication) {
// 			from components.java
// 		}
// 	}

// 	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
// 	repositories {
// 		// Add repositories to publish to here.
// 		// Notice: This block does NOT have the same function as the block in the top level.
// 		// The repositories here will be used for publishing your artifact, not for
// 		// retrieving dependencies.
// 	}
// }
